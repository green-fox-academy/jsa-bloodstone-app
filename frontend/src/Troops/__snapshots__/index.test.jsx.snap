// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Troops /> Should render error and match the snapshot 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  presentationStyle="overFullScreen"
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0,0,0,0.6)",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "borderColor": "grey",
            "borderRadius": 6,
            "borderWidth": 2,
            "overflow": "hidden",
            "width": 300,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#10978b",
                "borderTopRightRadius": 6,
                "borderTopStartRadius": 6,
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
              Object {
                "backgroundColor": "rgba(255,0,0,0.9)",
                "borderColor": "grey",
                "borderTopRightRadius": 0,
                "borderTopStartRadius": 0,
                "borderWidth": 2,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 13,
                "fontWeight": "bold",
                "padding": 15,
              }
            }
          >
            System Error
          </Text>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderTopRightRadius": 6,
                "padding": 15,
              }
            }
          >
            <Text />
          </View>
        </View>
        <ViewManagerAdapter_ExpoLinearGradient
          proxiedProperties={
            Object {
              "colors": Array [
                4294901760,
                4294944000,
                4294967040,
                4278222848,
                4278190335,
                4283105410,
                4286578816,
              ],
              "endPoint": Array [
                0.6584878422685283,
                1.091484679728111,
              ],
              "locations": Array [
                0,
                0.2,
                0.34,
                0.51,
                0.68,
                0.84,
                1,
              ],
              "startPoint": Array [
                0.3415121577314717,
                -0.09148467972811103,
              ],
            }
          }
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderColor": "grey",
              "borderWidth": 2,
              "padding": 20,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 10,
                "overflow": "hidden",
              }
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "height": 175,
                  "width": 175,
                }
              }
            />
          </View>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "fontSize": 20,
                "fontWeight": "bold",
                "margin": 10,
              }
            }
          >
            Oops, test error
          </Text>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 3,
                "width": 100,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "backgroundColor": "#10978b",
                    "borderRadius": 10,
                    "elevation": 1,
                    "flexDirection": "row",
                    "marginBottom": 2,
                    "padding": 12,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "x": 0,
                      "y": 4,
                    },
                    "shadowOpacity": 0.1,
                    "shadowRadius": 6,
                  },
                  Object {
                    "backgroundColor": "rgb(220,0,0)",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontWeight": "bold",
                  }
                }
              >
                CLOSE
              </Text>
            </View>
          </View>
        </ViewManagerAdapter_ExpoLinearGradient>
      </View>
    </RCTSafeAreaView>
  </View>
</Modal>
`;

exports[`<Troops /> Should render loading and match the snapshot 1`] = `
<ActivityIndicator
  animating={true}
  color="#10978b"
  hidesWhenStopped={true}
  size="large"
/>
`;
